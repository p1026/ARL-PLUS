{"remainingRequest":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\src\\views\\table\\webfing-info.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\src\\views\\table\\webfing-info.vue","mtime":1759135052000},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1759192387221},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1759192386775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}