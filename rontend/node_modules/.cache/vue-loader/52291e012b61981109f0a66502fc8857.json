{"remainingRequest":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\views\\dashboard\\admin\\components\\PanelGroup.vue?vue&type=template&id=48c369af&scoped=true","dependencies":[{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\views\\dashboard\\admin\\components\\PanelGroup.vue","mtime":1759135052000},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1759192392388},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1759192386775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJlbC1yb3ciLAogICAgeyBzdGF0aWNDbGFzczogInBhbmVsLWdyb3VwIiwgYXR0cnM6IHsgZ3V0dGVyOiA0MCB9IH0sCiAgICBbCiAgICAgIF9jKAogICAgICAgICJlbC1jb2wiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWNvbCIsIGF0dHJzOiB7IHhzOiAxMiwgc206IDEyLCBsZzogNiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbCIsIG9uOiB7IGNsaWNrOiBfdm0uaW5keERhdGEgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLXBlb3BsZSIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInN2Zy1pY29uIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiaWNvbi1jbGFzcyI6ICJjaGFydCIsCiAgICAgICAgICAgICAgICAgICAgICAiY2xhc3MtbmFtZSI6ICJjYXJkLXBhbmVsLWljb24iLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1kZXNjcmlwdGlvbiIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLXRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiDpobnnm67mlbDph48gIiksCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1udW0gbGluay10eXBlIiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRvOiAiLi4vLi4vdGFzay9hZGQtdGFzayIsCiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyNjAwLAogICAgICAgICAgICAgICAgICAgICAgICAic3RhcnQtdmFsIjogMCwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhfdm0ubGlzdC50YXNrX2NudCkpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgIF0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImVsLWNvbCIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtY29sIiwgYXR0cnM6IHsgeHM6IDEyLCBzbTogMTIsIGxnOiA2IH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsIiwgb246IHsgY2xpY2s6IF92bS5pbmR4RGF0YSB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtaWNvbi13cmFwcGVyIGljb24tbWVzc2FnZSIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInN2Zy1pY29uIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiaWNvbi1jbGFzcyI6ICJleWUtb3BlbiIsCiAgICAgICAgICAgICAgICAgICAgICAiY2xhc3MtbmFtZSI6ICJjYXJkLXBhbmVsLWljb24iLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1kZXNjcmlwdGlvbiIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLXRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBXRULnq5nngrkgIiksCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1udW0gbGluay10eXBlIiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRvOiAiLi4vLi4vdGFzay9hbGx3ZWItaW5mbyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwLAogICAgICAgICAgICAgICAgICAgICAgICAic3RhcnQtdmFsIjogMCwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhfdm0ubGlzdC5zaXRlX2NudCkpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgIF0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImVsLWNvbCIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtY29sIiwgYXR0cnM6IHsgeHM6IDEyLCBzbTogMTIsIGxnOiA2IH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsIiwgb246IHsgY2xpY2s6IF92bS5pbmR4RGF0YSB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtaWNvbi13cmFwcGVyIGljb24tbW9uZXkiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJzdmctaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgImljb24tY2xhc3MiOiAiZ3VpZGUiLAogICAgICAgICAgICAgICAgICAgICAgImNsYXNzLW5hbWUiOiAiY2FyZC1wYW5lbC1pY29uIiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtZGVzY3JpcHRpb24iIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIg5Y+R546w5a2Q5Z+fICIpLAogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtbnVtIGxpbmstdHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICB0bzogIi4uLy4uL3Rhc2svYWxsZG9tYWluLWluZm8iLAogICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzIwMCwKICAgICAgICAgICAgICAgICAgICAgICAgInN0YXJ0LXZhbCI6IDAsCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLmxpc3QuZG9tYWluX2NudCkpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgIF0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImVsLWNvbCIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtY29sIiwgYXR0cnM6IHsgeHM6IDEyLCBzbTogMTIsIGxnOiA2IH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsIiwgb246IHsgY2xpY2s6IF92bS5pbmR4RGF0YSB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtaWNvbi13cmFwcGVyIGljb24tc2hvcHBpbmciIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJzdmctaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgImljb24tY2xhc3MiOiAiYnVnIiwKICAgICAgICAgICAgICAgICAgICAgICJjbGFzcy1uYW1lIjogImNhcmQtcGFuZWwtaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiIOa8j+a0nuaVsOmHjyAiKSwKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLW51bSBsaW5rLXR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdG86ICIuLi8uLi90YXNrL2FsbG51Y2xlaS1pbmZvIiwKICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDM2MDAsCiAgICAgICAgICAgICAgICAgICAgICAgICJzdGFydC12YWwiOiAwLAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5saXN0LnZ1bF9jbnQpKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKCJlbC1jb2wiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1jb2wiLCBhdHRyczogeyBsZzogNCB9IH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwiLCBvbjogeyBjbGljazogX3ZtLmluZHhEYXRhIH0gfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLXNob3BwaW5nIiB9LCBbCiAgICAgICAgICAgIF92bS5fdigiIENQVe+8miAiKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2lyY2xlLXByb2dyZXNzLXdyYXBwZXIiIH0sIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjaXJjbGUtcHJvZ3Jlc3MiLAogICAgICAgICAgICAgICAgc3R5bGU6IHsgd2lkdGg6IF92bS5saXN0LmNwdSArICIlIiB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtbnVtIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5saXN0LmNwdSkgKyAiJSIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImVsLWNvbCIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWNvbCIsIGF0dHJzOiB7IGxnOiAxMCB9IH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwiLCBvbjogeyBjbGljazogX3ZtLmluZHhEYXRhIH0gfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLXNob3BwaW5nIiwKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBmbG9hdDogImxlZnQiIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiDlhoXlrZjvvJogIildCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWRlc2NyaXB0aW9uIiwKICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBmbG9hdDogImxlZnQiLCAibWFyZ2luLWxlZnQiOiAiMTBweCIgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICAgICAgICBzdHlsZTogeyB3aWR0aDogX3ZtLmxpc3QubWVtb3J5aW5mby5tZW1vcnkgKyAiJSIgfSwKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1udW0iIH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0ubGlzdC5tZW1vcnlpbmZvLm1lbW9yeSkgKyAiJSIpLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgb3ZlcmZsb3c6ICJoaWRkZW4iIH0gfSwKICAgICAgICAgICAgX3ZtLl9sKF92bS5tZW5tTGlzdCwgZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAga2V5OiBpdGVtLnBpZCwKICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBmbG9hdDogImxlZnQiLAogICAgICAgICAgICAgICAgICAgICJtYXJnaW4tbGVmdCI6ICI1cHgiLAogICAgICAgICAgICAgICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiaDMiLCB7IHN0YXRpY1N0eWxlOiB7ICJtYXJnaW4tYm90dG9tIjogIjVweCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJQSUQ6ICIpLAogICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNTdHlsZTogeyBjb2xvcjogImdyZWVuIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoaXRlbS5waWQpKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJoMyIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi10b3AiOiAiMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJtYXJnaW4tYm90dG9tIjogIjVweCIsCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJOYW1lOiAiKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNTdHlsZTogeyBjb2xvcjogImdyZWVuIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhpdGVtLm5hbWUpKSwKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIH0pLAogICAgICAgICAgICAwCiAgICAgICAgICApLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiZWwtY29sIiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwtY29sIiwgYXR0cnM6IHsgbGc6IDQgfSB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsIiwgb246IHsgY2xpY2s6IF92bS5pbmR4RGF0YSB9IH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1pY29uLXdyYXBwZXIgaWNvbi1zaG9wcGluZyIsCiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgZmxvYXQ6ICJsZWZ0IiB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIg5a655Zmo77yaICIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICBmbG9hdDogImxlZnQiLAogICAgICAgICAgICAgICAgIm1hcmdpbi1sZWZ0IjogIjVweCIsCiAgICAgICAgICAgICAgICAibWFyZ2luLWJvdHRvbSI6ICIyMHB4IiwKICAgICAgICAgICAgICAgICJtYXJnaW4tdG9wIjogIjEwcHgiLAogICAgICAgICAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIF92bS5fbChfdm0ubGlzdC5zZXJ2aWNlLCBmdW5jdGlvbiAoc3RhdHVzLCBzZXJ2aWNlTmFtZSkgewogICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBrZXk6IHNlcnZpY2VOYW1lLCBzdGF0aWNTdHlsZTogeyAibWFyZ2luLXRvcCI6ICI0cHgiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgc3RhdHVzID09PSAicnVubmluZyIKICAgICAgICAgICAgICAgICAgICA/IF9jKCJzcGFuIiwgeyBzdGF0aWNTdHlsZTogeyBjb2xvcjogImdyZWVuIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhzZXJ2aWNlTmFtZSkgKyAiOiAiICsgX3ZtLl9zKHN0YXR1cykpLAogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICA6IF9jKCJzcGFuIiwgeyBzdGF0aWNTdHlsZTogeyBjb2xvcjogInJlZCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3Moc2VydmljZU5hbWUpICsgIjogIiArIF92bS5fcyhzdGF0dXMpKSwKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIDAKICAgICAgICAgICksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJlbC1jb2wiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1wYW5lbC1jb2wiLCBhdHRyczogeyBsZzogNiB9IH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtcGFuZWwiLCBvbjogeyBjbGljazogX3ZtLmluZHhEYXRhIH0gfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXBhbmVsLWljb24td3JhcHBlciBpY29uLXNob3BwaW5nIiB9LCBbCiAgICAgICAgICAgIF92bS5fdigiIOezu+e7n++8miAiKSwKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgX2MoImgzIiwgeyBzdGF0aWNTdHlsZTogeyBjb2xvcjogImdyZWVuIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLmxpc3Quc3lzaW5mby5kaXN0cm8gKyAiICIgKyBfdm0ubGlzdC5zeXNpbmZvLm9zKQogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiaDMiLCB7IHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiZ3JlZW4iIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLmxpc3Quc3lzaW5mby5uYW1lKSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiaDMiLAogICAgICAgICAgICAgIHsgc3RhdGljU3R5bGU6IHsgY29sb3I6ICJncmVlbiIsICJtYXJnaW4tbGVmdCI6ICIxMDZweCIgfSB9LAogICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5saXN0LnN5c2luZm8ucnVudGltZSkpXQogICAgICAgICAgICApLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}