{"remainingRequest":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\views\\table\\add-task.vue?vue&type=style&index=0&id=7ad37828&lang=css","dependencies":[{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\views\\table\\add-task.vue","mtime":1759135052000},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1759192382851},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1759192391907},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1759192384629},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1759192386775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNjcm9sbGFibGUtY29udGVudCB7CiAgd2lkdGg6IDIwMHB4OyAvKiDlrr3luqbmoLnmja7pnIDopoHosIPmlbQgKi8KICBoZWlnaHQ6IDMwMHB4OyAvKiDpq5jluqbmoLnmja7pnIDopoHosIPmlbQgKi8KICBvdmVyZmxvdy15OiBzY3JvbGw7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBwYWRkaW5nOiA1cHg7CiAgd2hpdGUtc3BhY2U6IHByZS13cmFwOyAvKiDkv53nlZnmjaLooYzlkoznqbrmoLwgKi8KfQo="},{"version":3,"sources":["add-task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"add-task.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.name\"\n        :placeholder=\"$t('table.name')\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <el-input\n        v-model=\"listQuery.target\"\n        :placeholder=\"$t('table.target')\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        {{ $t('table.search') }}\n      </el-button>\n      <br> <br>\n      <el-select\n        v-model=\"listQuery.order\"\n        style=\"width: 120px\"\n        class=\"filter-item\"\n        placeholder=\"排序\"\n        @change=\"handleFilter\"\n      >\n        <el-option v-for=\"item in sortOptions\" :key=\"item.key\" :label=\"item.label\" :value=\"item.key\" />\n      </el-select>\n      <el-button\n        class=\"filter-item\"\n        style=\"margin-left: 10px;\"\n        type=\"primary\"\n        icon=\"el-icon-edit\"\n        @click=\"handleCreate\"\n      >\n        {{ $t('table.add') }}\n      </el-button>\n      <el-button type=\"danger\" class=\"filter-item\" @click=\"batchDelect\">批量删除</el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @selection-change=\"handleSelectionChange\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column type=\"selection\" width=\"40\" /> <!-- 添加复选框列 -->\n      <el-table-column type=\"index\" :index=\"indexMethod\" align=\"center\" width=\"60\" label=\"序号\" />\n      <el-table-column :label=\"$t('table.name')\" min-width=\"230px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\" @click=\"navigateToAllInfo(row)\">\n            {{ row.name }}\n          </span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.domain')\" min-width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.target }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.src')\" min-width=\"80px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <a class=\"link-type\" :href=\"row.options.remark\" target=\"_blank\"> {{ row.options.src }} </a>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.tj')\" min-width=\"130px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <div style=\"display: flex;flex-direction: column\">\n            <span>站点： {{ row.statistic ? row.statistic.site_cnt : '0' }}</span>\n            <span>子域： {{ row.statistic ? row.statistic.domain_cnt : '0' }}</span>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.status')\" min-width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tooltip placement=\"top\" :open-delay=\"1\">\n            <el-tag :type=\"row.status | statusFilter\">\n              {{ row.status }}\n            </el-tag>\n            <div slot=\"content\">\n              <pre v-for=\"(item, index) in row.service\" :key=\"index\">{{ item.name }}：{{ item.elapsed }}</pre>\n            </div>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.create_date')\" min-width=\"155px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.start_time }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.end_date')\" min-width=\"155px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.end_time }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column\n        fixed=\"right\"\n        :label=\"$t('table.actions')\"\n        align=\"center\"\n        width=\"380\"\n        class-name=\"small-padding fixed-width\"\n      >\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"syncTask(row)\">\n            {{ $t('table.sync') }}\n          </el-button>\n          <el-button size=\"mini\">\n            {{ $t('table.exp') }}\n          </el-button>\n          <el-button\n            size=\"mini\"\n            type=\"info\"\n            :disabled=\"row.status === 'done' || row.status === 'stop' || row.status === 'error'\"\n            @click=\"taskStop(row)\"\n          >\n            {{ $t('table.draft') }}\n          </el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(row)\">\n            {{ $t('table.delete') }}\n          </el-button>\n          <el-button size=\"mini\" type=\"success\" @click=\"reStarts(row)\">\n            {{ $t('table.reboot') }}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.size\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        ref=\"dataForm\"\n        :rules=\"rules\"\n        :model=\"temp\"\n        label-position=\"left\"\n        label-width=\"70px\"\n        style=\"width: 400px; margin-left:50px;\"\n      >\n        <el-form-item :label=\"$t('table.name')\" prop=\"task\">\n          <el-input v-model=\"temp.name\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('table.domain')\" prop=\"domain\" required>\n          <el-input v-model=\"temp.domain\" :autosize=\"{ minRows: 2, maxRows: 4}\" type=\"textarea\" placeholder=\"请输入域名、IP、IP段\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('table.domain_brute_type')\">\n          <el-select v-model=\"temp.domain_brute_type\" class=\"filter-item\">\n            <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('table.port_type')\">\n          <el-select v-model=\"temp.port_scan_type\" class=\"filter-item\">\n            <el-option v-for=\"item in levelptOptions\" :key=\"item\" :label=\"item\" :value=\"item\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('table.src')\">\n          <el-input v-model=\"temp.src\" />\n        </el-form-item>\n        <el-form-item label=\"地址\">\n          <el-input\n            v-model=\"temp.remark\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"Please input\"\n          />\n        </el-form-item>\n        <el-row :gutter=\"32\">\n          <el-col :span=\"24\">\n            <el-button size=\"mini\" @click=\"selectAll\">全选</el-button>\n            <el-button size=\"mini\" @click=\"deselectAll\">全部取消</el-button>\n            <br>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"domain_brute\" :true-label=\"true\" :false-label=\"false\">域名爆破</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"domain_oneforall\" :true-label=\"true\" :false-label=\"false\">oneforall调用</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"alt_dns\" :true-label=\"true\" :false-label=\"false\">DNS字典智能生成</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"dns_query_plugin\" :true-label=\"true\" :false-label=\"false\">域名查询插件</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"arl_search\" :true-label=\"true\" :false-label=\"false\">ARL 历史查询</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"port_scan\" :true-label=\"true\" :false-label=\"false\">端口扫描</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"service_detection\" :true-label=\"true\" :false-label=\"false\">服务识别</el-checkbox>\n          </el-col>\n          <br><br> <br>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"os_detection\" :true-label=\"true\" :false-label=\"false\">操作系统识别</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"ssl_cert\" :true-label=\"true\" :false-label=\"false\">SSL 证书获取</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"skip_scan_cdn_ip\" :true-label=\"true\" :false-label=\"false\">跳过CDN</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"site_identify\" :true-label=\"true\" :false-label=\"false\">站点识别</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"search_engines\" :true-label=\"true\" :false-label=\"false\">搜索引擎调用</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"site_spider\" :true-label=\"true\" :false-label=\"false\">站点爬虫</el-checkbox>\n          </el-col>\n          <br><br> <br>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"site_capture\" :true-label=\"true\" :false-label=\"false\">站点截图</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"file_leak\" :true-label=\"true\" :false-label=\"false\">文件泄露</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"findvhost\" :true-label=\"true\" :false-label=\"false\">Host 碰撞</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"web_info_hunter\" :true-label=\"true\" :false-label=\"false\">WIH调用</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"unauth_scan\" :true-label=\"true\" :false-label=\"false\">unauth调用</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"nuclei_scan\" :true-label=\"true\" :false-label=\"false\">nuclei 调用</el-checkbox>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-checkbox v-model=\"xray_scan\" :true-label=\"true\" :false-label=\"false\">xray 调用</el-checkbox>\n          </el-col>\n        </el-row>\n        <br><br>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          {{ $t('table.cancel') }}\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">\n          {{ $t('table.confirm') }}\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"synctask[dialogStatus]\" :visible.sync=\"dialogVisible\">\n      <el-form\n        ref=\"dataForm\"\n        :rules=\"rules\"\n        :model=\"temps\"\n        label-position=\"left\"\n        label-width=\"70px\"\n        style=\"width: 400px; margin-left:50px;\"\n      >\n        <el-form-item label=\"资产\" required>\n          <el-select v-model=\"temp._id\" class=\"filter-item\" style=\"width: 500px\">\n            <el-option v-for=\"item in synclist\" :key=\"item._id\" :label=\"item.name + '('+ item.scope + ')'\" :value=\"item._id\" style=\"width: 500px\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addsyncTask\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<style>\n.scrollable-content {\n  width: 200px; /* 宽度根据需要调整 */\n  height: 300px; /* 高度根据需要调整 */\n  overflow-y: scroll;\n  border: 1px solid #ccc;\n  padding: 5px;\n  white-space: pre-wrap; /* 保留换行和空格 */\n}\n</style>\n\n<script>\nimport {\n  fetchList,\n  createArticle,\n  updateArticle,\n  deleteArticle,\n  batchdeleteArticle,\n  reStart,\n  Stop, syncList, addsync\n} from '@/api/article'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination'\n\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        done: 'success',\n        draft: 'info',\n        error: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n\n  data() {\n    return {\n      dialogVisible: false,\n      domain_brute: false,\n      domain_oneforall: false,\n      alt_dns: false,\n      dns_query_plugin: false,\n      arl_search: false,\n      port_scan: false,\n      service_detection: false,\n      service_brute: false,\n      os_detection: false,\n      ssl_cert: false,\n      skip_scan_cdn_ip: false,\n      site_identify: false,\n      search_engines: false,\n      site_spider: false,\n      site_capture: false,\n      file_leak: false,\n      findvhost: false,\n      unauth_scan: false,\n      web_info_hunter: false,\n      nuclei_scan: false,\n      xray_scan: false,\n      tableKey: 0,\n      list: null,\n      synclist: [],\n      sels: '', // 当前选框选中的值\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        size: 10\n      },\n      sortOptions: [{ label: '升序', key: 'target' }, { label: '降序', key: '-target' }],\n      statusOptions: ['test', 'big'],\n      srcptOptions: ['test', 'top100', 'top1000', 'all'],\n      levelptOptions: ['test', 'top100', 'top1000', 'all'],\n      showReviewer: false,\n      temp: {\n        name: '',\n        domain: '',\n        _id: '',\n        task_id: '',\n        domain_brute_type: 'big',\n        port_scan_type: 'top1000'\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      synctask: {\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{ required: true, message: '类型不能为空', trigger: 'change' }],\n        domain: [{ required: true, message: '域名不能为空', trigger: 'change' }],\n        name: [{ required: true, message: '厂商不能为空', trigger: 'blur' }]\n      },\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    selectAll() {\n      // eslint-disable-next-line no-sequences\n      this.domain_brute = true,\n      this.domain_oneforall = true,\n      this.alt_dns = true,\n      this.dns_query_plugin = true,\n      this.arl_search = true,\n      this.port_scan = true,\n      this.service_detection = true,\n      this.service_brute = true,\n      this.os_detection = true,\n      this.ssl_cert = true,\n      this.skip_scan_cdn_ip = true,\n      this.site_identify = true,\n      this.search_engines = true,\n      this.site_spider = true,\n      this.site_capture = true,\n      this.file_leak = true,\n      this.findvhost = true,\n      this.unauth_scan = true,\n      this.web_info_hunter = true,\n      this.nuclei_scan = true,\n      this.xray_scan = true\n    },\n    deselectAll() {\n      // eslint-disable-next-line no-sequences\n      this.domain_brute = false,\n      this.domain_oneforall = false,\n      this.alt_dns = false,\n      this.dns_query_plugin = false,\n      this.arl_search = false,\n      this.port_scan = false,\n      this.service_detection = false,\n      this.service_brute = false,\n      this.os_detection = false,\n      this.ssl_cert = false,\n      this.skip_scan_cdn_ip = false,\n      this.site_identify = false,\n      this.search_engines = false,\n      this.site_spider = false,\n      this.site_capture = false,\n      this.file_leak = false,\n      this.findvhost = false,\n      this.unauth_scan = false,\n      this.web_info_hunter = false,\n      this.nuclei_scan = false,\n      this.xray_scan = false\n    },\n    navigateToAllInfo(row) {\n      this.$router.push({\n        path: 'all-info',\n        query: {\n          task_id: row._id,\n          targetName: row.target,\n          site_cnt: row.statistic ? row.statistic.site_cnt : '0',\n          domain_cnt: row.statistic ? row.statistic.domain_cnt : '0',\n          ip_cnt: row.statistic ? row.statistic.ip_cnt : '0',\n          cert_cnt: row.statistic ? row.statistic.cert_cnt : '0',\n          service_cnt: row.statistic ? row.statistic.service_cnt : '0',\n          fileleak_cnt: row.statistic ? row.statistic.fileleak_cnt : '0',\n          url_cnt: row.statistic ? row.statistic.url_cnt : '0',\n          vuln_cnt: row.statistic ? row.statistic.vuln_cnt : '0',\n          npoc_service_cnt: row.statistic ? row.statistic.npoc_service_cnt : '0',\n          cip_cnt: row.statistic ? row.statistic.cip_cnt : '0',\n          nuclei_result_cnt: row.statistic ? row.statistic.nuclei_result_cnt : '0',\n          stat_finger_cnt: row.statistic ? row.statistic.stat_finger_cnt : '0',\n          unauth_cnt: row.statistic ? row.statistic.unauth_cnt : '0',\n          xray_result_cnt: row.statistic ? row.statistic.xray_result_cnt : '0',\n          wih_cnt: row.statistic ? row.statistic.wih_cnt : '0'\n        }\n      })\n    },\n    getList() {\n      this.listLoading = true\n      fetchList(this.listQuery).then(response => {\n        this.list = response.items\n        this.total = response.total\n\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1 * 1000)\n      })\n    },\n    indexMethod(index) {\n      return index + 1\n    },\n    handleFilter() {\n      this.getList()\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    handleCreate() {\n      this.temp.name = ''\n      this.temp.domain = ''\n      this.deselectAll()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const result = {\n            name: this.temp.name,\n            target: this.temp.domain,\n            domain_brute_type: this.temp.domain_brute_type,\n            port_scan_type: this.temp.port_scan_type,\n            domain_brute: !!this.domain_brute,\n            domain_oneforall: !!this.domain_oneforall,\n            alt_dns: !!this.alt_dns,\n            dns_query_plugin: !!this.dns_query_plugin,\n            arl_search: !!this.arl_search,\n            port_scan: !!this.port_scan,\n            service_detection: !!this.service_detection,\n            service_brute: !!this.service_brute,\n            os_detection: !!this.os_detection,\n            ssl_cert: !!this.ssl_cert,\n            skip_scan_cdn_ip: !!this.skip_scan_cdn_ip,\n            site_identify: !!this.site_identify,\n            search_engines: !!this.search_engines,\n            site_spider: !!this.site_spider,\n            site_capture: !!this.site_capture,\n            file_leak: !!this.file_leak,\n            findvhost: !!this.findvhost,\n            web_info_hunter: !!this.web_info_hunter,\n            unauth_scan: !!this.unauth_scan,\n            nuclei_scan: !!this.nuclei_scan,\n            xray_scan: !!this.xray_scan,\n            src: this.temp.src,\n            remark: this.temp.remark\n          }\n          createArticle(result).then(response => {\n            if (response.code === 200) {\n              this.list.unshift(this.temp)\n              this.dialogFormVisible = false\n              this.$notify({\n                title: '成功',\n                message: '创建成功',\n                type: 'success',\n                duration: 2000\n              })\n              this.getList()\n            }\n          }).catch(error => {\n            // 处理和显示异常\n            this.$notify({\n              title: '错误',\n              message: error.message || '创建时发生错误', // 使用错误消息或默认的错误文本\n              type: 'error',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleUpdate(row) {\n      this.temp = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    syncTask(row) {\n      this.dialogVisible = true\n      this.temp.task_id = row._id\n      const newList = {\n        target: row.target\n      }\n      syncList(newList).then(response => {\n        this.synclist = response.items\n        this.total = response.total\n\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1 * 1000)\n      })\n    },\n    addsyncTask() {\n      const result = {\n        scope_id: this.temp._id,\n        task_id: this.temp.task_id\n      }\n      addsync(result).then(response => {\n        this.$notify({\n          title: '成功',\n          message: '更新成功',\n          type: 'success',\n          duration: 2000\n        })\n        this.dialogVisible = false\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const tempData = Object.assign({}, this.temp)\n          updateArticle(tempData.uid, tempData).then(() => {\n            const index = this.list.findIndex(v => v.id === this.temp.id)\n            this.list.splice(index, 1, this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleSelectionChange(sels) {\n      this.sels = sels\n    },\n    batchDelect() {\n      this.$confirm('确认删除记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        const data = {\n          del_task_data: true,\n          task_id: this.sels.map((item) => item._id)\n        }\n        batchdeleteArticle(data).then(response => {\n          if (response.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    handleDelete(row) {\n      this.$confirm('确认删除记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        const data = {\n          del_task_data: true,\n          task_id: [row._id]\n        }\n        deleteArticle(data).then(response => {\n          if (response.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    reStarts(row) {\n      const data = {\n        task_id: [row._id]\n      }\n      reStart(data).then(response => {\n        if (response.code === 200) {\n          this.$notify({\n            title: '成功',\n            message: '重启成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.getList()\n        }\n      }).catch(error => {\n        // 处理请求异常\n        this.$notify({\n          title: '失败',\n          message: error.message,\n          type: 'error',\n          duration: 2000\n        })\n      })\n    },\n    taskStop(row) {\n      Stop(row._id).then(response => {\n        if (response.code === 200) {\n          this.$notify({\n            title: '成功',\n            message: '停止成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.getList()\n        }\n      }).catch(error => {\n        // 处理请求异常\n        this.$notify({\n          title: '失败',\n          message: error.message,\n          type: 'error',\n          duration: 2000\n        })\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['任务', '目标', '状态', '开始时间', '结束时间']\n        const filterVal = ['name', 'target', 'status', 'start_time', 'end_time']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: '任务表'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const order = this.listQuery.order\n      return order === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}