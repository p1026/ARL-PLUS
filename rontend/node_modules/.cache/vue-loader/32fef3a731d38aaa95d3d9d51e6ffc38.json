{"remainingRequest":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\src\\views\\table\\rule-info.vue?vue&type=template&id=136275b4","dependencies":[{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\src\\views\\table\\rule-info.vue","mtime":1759135052000},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1759192392388},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1759192386775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}