{"remainingRequest":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\src\\views\\table\\group-info.vue?vue&type=style&index=1&id=014dd5b7&scoped=true&lang=css","dependencies":[{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\src\\views\\table\\group-info.vue","mtime":1759135052000},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1759192382851},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1759192391907},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1759192384629},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"D:\\DawnLauncher\\PKEY\\Project\\Vue\\rontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1759192386775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2Nyb2xsYWJsZSB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiA4MHB4OwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCi5zY3JvbGxhYmxlOmhvdmVyIHsKICBvdmVyZmxvdy15OiBhdXRvOwp9Cgo="},{"version":3,"sources":["group-info.vue"],"names":[],"mappingspBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"group-info.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.name\"\n        :placeholder=\"$t('table.groupname')\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <el-input\n        v-model=\"listQuery.scope\"\n        :placeholder=\"$t('table.grouprange')\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <el-input\n        v-model=\"listQuery._id\"\n        :placeholder=\"$t('table.groupid')\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        {{ $t('table.search') }}\n      </el-button>\n      <br> <br>\n      <el-button\n        class=\"filter-item\"\n        style=\"margin-left: 10px;\"\n        type=\"success\"\n        @click=\"handleCreate\"\n      >\n        新建分组\n      </el-button>\n      <el-button type=\"danger\" class=\"filter-item\" @click=\"grouDelects\">批量删除</el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @selection-change=\"handleSelectionChange\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column type=\"selection\" width=\"40\" /> <!-- 添加复选框列 -->\n      <el-table-column type=\"index\" :index=\"indexMethod\" align=\"center\" width=\"60\" label=\"序号\" />\n      <el-table-column :label=\"$t('table.groupname')\" min-width=\"70px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span >\n            {{ row.name }}\n          </span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.grouprange')\" min-width=\"200px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <div class=\"scrollable\">\n          <div v-for=\"item in row.scope_array\" :key=\"item\">\n            <span class=\"el-tag el-tag--success el-tag--medium el-tag--light\">{{ item }}</span>\n            <i class=\"el-icon-close\" @click=\"deleteItem(row._id, item)\" />\n          </div>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.type')\" width=\"70px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span v-if=\"row.scope_type === 'domain'\">域名</span>\n          <span v-else>IP</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.groupid')\" width=\"220px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row._id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.actions')\" align=\"center\" width=\"500\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n            {{ $t('table.addgroup') }}\n          </el-button>\n          <el-button type=\"info\" size=\"mini\" @click=\"grouptaskCreate(row)\">\n            {{ $t('table.addlook') }}\n          </el-button>\n          <el-button size=\"mini\" type=\"success\" @click=\"groupsiteCreate(row)\">\n            {{ $t('table.addsitelook') }}\n          </el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"grouDelect1(row._id)\">\n            {{ $t('table.delete') }}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.size\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        ref=\"dataForm\"\n        :rules=\"rules\"\n        :model=\"temp\"\n        label-position=\"left\"\n        label-width=\"70px\"\n        style=\"width: 400px; margin-left:50px;\"\n      >\n        <el-form-item :label=\"$t('table.type')\" required>\n          <el-select v-model=\"temp.scope_type\" class=\"filter-item\" :disabled=\"dialogStatus === 'update'\">\n            <el-option v-for=\"item in levelptOptions\" :key=\"item\" :label=\"item\" :value=\"item\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('table.groupname')\" required>\n          <el-input v-model=\"temp.name\" :disabled=\"dialogStatus === 'update'\" />\n        </el-form-item>\n        <el-form-item :label=\"$t('table.grouprange')\" required>\n          <el-input\n            v-model=\"temp.scope\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"Please input\"\n          />\n        </el-form-item>\n        <br><br>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          {{ $t('table.cancel') }}\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">\n          {{ $t('table.confirm') }}\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"listentask[dialogStatus]\" :visible.sync=\"dialogVisible\">\n      <el-form\n        ref=\"dataForm\"\n        :rules=\"rules\"\n        :model=\"temps\"\n        label-position=\"left\"\n        label-width=\"70px\"\n        style=\"width: 400px; margin-left:50px;\"\n      >\n        <el-form-item v-if=\"dialogStatus !== 'site'\" :label=\"$t('table.grouprange')\" required>\n          <el-select v-model=\"orgData\" size=\"small\" multiple collapse-tags style=\"width: 500px\" filterable>\n            <div class=\"select_up\">\n              <el-button type=\"text\" @click=\"selectAll\">\n                <i class=\"jw jw-quanxuan \" />\n                全选</el-button>\n              <el-button type=\"text\" @click=\"removeTag\">\n                <i class=\"jw jw-qingkong \" />\n                清空</el-button>\n              <el-button type=\"text\" @click=\"selectReverse\">\n                <i class=\"jw jw-fanxuan \" />\n                反选</el-button>\n            </div>\n            <div class=\"select_list\" style=\"width: 500px\">\n              <el-option v-for=\"item in taskOption\" :key=\"item\" :label=\"item\" :value=\"item\" />\n            </div>\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"$t('table.run_time')\" required>\n          <el-input-number v-model=\"temp.interval\" :min=\"1\" :max=\"1000\" style=\"width: 500px\" />\n        </el-form-item>\n        <el-form-item v-if=\"dialogStatus !== 'site'\" :label=\"$t('table.rule')\">\n          <el-select v-model=\"temp.policy_id\" class=\"filter-item\" style=\"width: 500px\">\n            <el-option v-for=\"item in policyid\" :key=\"item._id\" :label=\"item.name\" :value=\"item._id\" style=\"width: 500px\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?listTask():siteTask()\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<style>\n.form-container {\n  display: grid;\n  grid-template-columns: 1fr;\n}\n\n.el-select-dropdown__list {\n  height: 100%;\n  overflow: hidden;\n\n}\n.scrollable {\n  width: 100%;\n  height: 100px;\n  overflow: hidden;\n  display: flex;\n  flex-wrap: wrap; /* 允许项目换行 */\n}\n\n.scrollable:hover {\n  overflow-y: auto;\n}\n\n.select_up {\n  padding: 0 12px;\n  font-size: 14px;\n  position: absolute;\n  z-index: 99999;\n  background-color: white;\n  top: 0px;\n  width: 100%;\n  border-radius: 5px 5px 0 0;\n\n  ::v-deep .el-button {\n    color: #bcbcbc;\n    font-size: 14px;\n\n    i {\n      font-size: 14px;\n    }\n  }\n\n  ::v-deep .el-button:hover {\n    color: #409EFF;\n  }\n\n  .el-button+.el-button {\n    margin-left: 6px;\n  }\n}\n\n.select_list {\n  margin-top: 25px;\n}\n\n</style>\n\n<script>\nimport {\n  fetchPv, groupList, addGroup, grouDelect, addGrouprange, grouDelectscope, policyGroup, listtaskGroup, sitetaskGroup\n} from '@/api/article'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination'\n\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        done: 'success',\n        error: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n\n  data() {\n    return {\n      policyid: [],\n      dialogVisible: false,\n      orgData: [],\n      tableKey: 0,\n      list: null,\n      sels: '', // 当前选框选中的值\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        _id: '',\n        page: 1,\n        size: 10\n      },\n      sortOptions: [{ label: '升序', key: 'target' }, { label: '降序', key: '-target' }],\n      statusOptions: ['test', 'big'],\n      srcptOptions: ['test', 'top100', 'top1000', 'all'],\n      levelptOptions: ['domain', 'ip'],\n      taskOptions: [],\n      taskOption: [],\n      showReviewer: false,\n      temp: {\n        scope: '',\n        interval: 24,\n        domain: '',\n        name: '',\n        policy_id: '',\n        scope_id: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      listentask: {\n        create: 'Task',\n        site: 'Site'\n      },\n      listensite: {\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.listQuery._id = this.$route.query._id\n    this.listQuery.scope_id = this.$route.query.scope_id\n    this.getList()\n  },\n  methods: {\n    removeTag() {\n      this.orgData = []\n    },\n    selectAll(val) {\n      val = []\n      this.taskOption.map(item => {\n        val.push(item)\n      })\n      this.orgData = val\n    },\n    selectReverse(val) {\n      val = []\n      this.taskOption.map(item => {\n        const index = this.orgData.indexOf(item)\n        // eslint-disable-next-line no-empty\n        if (index !== -1) {\n        } else {\n          val.push(item)\n        }\n      })\n      this.orgData = val\n    },\n    getList() {\n      this.listLoading = true\n      groupList(this.listQuery).then(response => {\n        this.list = response.items\n        this.total = response.total\n        this.taskOptions = response.items.map(item => item.scope_array)\n\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1 * 1000)\n      })\n    },\n    indexMethod(index) {\n      return index + 1\n    },\n    handleFilter() {\n      this.getList()\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      this.temp = {\n        scope_type: '',\n        name: '',\n        scope: ''\n      }\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    grouptaskCreate(row) {\n      this.dialogStatus = 'create'\n      const idx = this.newindexMethod(row._id)\n      this.temp.scope_id = row._id\n      this.temp.name = ''\n      this.orgData = []\n      this.temp.policy_id = ''\n      this.temp.interval = 24\n      this.taskOption = this.taskOptions[idx]\n      this.dialogVisible = true\n      policyGroup(1000).then(response => {\n        this.policyid = response.items\n      })\n    },\n    groupsiteCreate(row) {\n      this.dialogStatus = 'site'\n      this.temp.scope_id = row._id\n      this.temp.interval = 24\n      this.dialogVisible = true\n    },\n    createData() {\n      this.dialogVisible = false\n      this.$refs['dataForm'].validate((valid) => {\n        const data = {\n          name: this.temp.name,\n          scope: this.temp.scope,\n          scope_type: this.temp.scope_type\n        }\n        addGroup(data).then(response => {\n          if (response.code === 200) {\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '成功',\n              message: '创建成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    handleUpdate(row) {\n      // eslint-disable-next-line no-sequences\n      this.temp.name = row.name\n      this.temp.scope_type = row.scope_type\n      this.temp._id = row._id\n      this.temp.scope = ''\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    listTask() {\n      this.dialogVisible = false\n      const data = {\n        name: this.temp.name ? this.temp.name : '',\n        interval: this.temp.interval * 3600,\n        domain: this.orgData.join(','),\n        policy_id: this.temp.policy_id,\n        scope_id: this.temp.scope_id\n      }\n      listtaskGroup(data).then(response => {\n        if (response.code === 200) {\n          this.$notify({\n            title: '成功',\n            message: '创建成功',\n            type: 'success',\n            duration: 2000\n          })\n        }\n      }).catch(error => {\n        // 处理请求异常\n        this.$notify({\n          title: '失败',\n          message: error.message,\n          type: 'error',\n          duration: 2000\n        })\n      })\n    },\n    siteTask() {\n      this.dialogVisible = false\n      const data = {\n        interval: this.temp.interval * 3600,\n        scope_id: this.temp.scope_id\n      }\n      sitetaskGroup(data).then(response => {\n        if (response.code === 200) {\n          this.$notify({\n            title: '成功',\n            message: response.message,\n            type: 'success',\n            duration: 2000\n          })\n        }\n      }).catch(error => {\n        // 处理请求异常\n        this.$notify({\n          title: '失败',\n          message: error.message,\n          type: 'error',\n          duration: 2000\n        })\n      })\n    },\n    newindexMethod(id) {\n      // 假设 this.tableData 是你的表格数据\n      return this.list.findIndex(row => row._id === id)\n    },\n    handleSelectionChange(sels) {\n      this.sels = sels\n    },\n    // 批量删除执行操作\n    grouDelects(id) {\n      // 删除前的提示\n      this.$confirm('确认删除记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        const data = {\n          scope_id: this.sels.map((item) => item._id)\n        }\n        grouDelect(data).then(response => {\n          if (response.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    grouDelect1(id) {\n      // 删除前的提示\n      this.$confirm('确认删除记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        const data = {\n          scope_id: [id]\n        }\n        grouDelect(data).then(response => {\n          if (response.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    deleteItem(scope_id, scope) {\n      this.listLoading = false\n      // 删除前的提示\n      this.$confirm('确认删除记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        grouDelectscope(scope_id, scope).then(response => {\n          if (response.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    handleFetchPv(pv) {\n      fetchPv(pv).then(response => {\n        this.pvData = response.data.pvData\n        this.dialogPvVisible = true\n      })\n    },\n    updateData() {\n      this.dialogVisible = false\n      this.$refs['dataForm'].validate((valid) => {\n        const tempData = {\n          scope_id: this.temp._id,\n          scope: this.temp.scope\n        }\n        addGrouprange(tempData).then(response => {\n          if (response.code === 200) {\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['任务', '目标', '状态', '开始时间', '结束时间']\n        const filterVal = ['name', 'target', 'status', 'start_time', 'end_time']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: '任务表'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const order = this.listQuery.order\n      return order === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n<style scoped>\n.scrollable {\n  width: 100%;\n  height: 80px;\n  overflow: hidden;\n}\n\n.scrollable:hover {\n  overflow-y: auto;\n}\n\n</style>\n"]}]}