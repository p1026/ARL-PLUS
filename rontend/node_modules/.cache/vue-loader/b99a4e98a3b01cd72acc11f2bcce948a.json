{"remainingRequest":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\views\\table\\rule-info.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\views\\table\\rule-info.vue","mtime":1759135052000},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1759192387221},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1759192386775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["rule-info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"rule-info.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input\n        v-model=\"listQuery.name\"\n        :placeholder=\"$t('table.name')\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <el-input\n        v-model=\"listQuery._id\"\n        placeholder=\"策略id\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"handleFilter\"\n      />\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        {{ $t('table.search') }}\n      </el-button>\n      <br> <br>\n      <el-button type=\"success\" class=\"filter-item\" @click=\"toaddrule\">新建策略</el-button>\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column type=\"index\" :index=\"indexMethod\" align=\"center\" width=\"60\" label=\"序号\" />\n      <el-table-column type=\"expand\" label=\"配置\" width=\"60\">\n        <template slot-scope=\"props\">\n          <h3>域名和ip配置</h3>\n          <span style=\"font-weight: bold;\">\n            域名爆破类型：\n          </span>\n          <span>\n            {{ props.row.policy.domain_config.domain_brute_type === 'big' ? '大字典' : '测试' }}\n          </span>\n          <br><br>\n          <span style=\"font-weight: bold;\">\n            端口扫描类型：\n          </span>\n          <span>\n            {{ props.row.policy.ip_config.port_scan_type }}\n          </span>\n          <br><br>\n          <span style=\"font-weight: bold;\">\n            配置信息：\n          </span>\n          <span>\n            {{ props.row.policy.domain_config.domain_brute === true ? '域名爆破、' : '' }}\n            {{ props.row.policy.domain_config.domain_oneforall === true ? 'oneforall调用、' : '' }}\n            {{ props.row.policy.domain_config.alt_dns === true ? 'DNS字典智能生成、' : '' }}\n            {{ props.row.policy.domain_config.arl_search === true ? 'ARL 历史查询、' : '' }}\n            {{ props.row.policy.domain_config.search_engines === true ? '搜索引擎调用、' : '' }}\n            {{ props.row.policy.domain_config.dns_query_plugin === true ? '域名查询插件、' : '' }}}\n            {{ props.row.policy.ip_config.skip_scan_cdn_ip === true ? '跳过CDN、' : '' }}\n            {{ props.row.policy.ip_config.port_scan === true ? '端口扫描、' : '' }}\n            {{ props.row.policy.ip_config.service_detection === true ? '服务扫描、' : '' }}\n            {{ props.row.policy.ip_config.os_detection === true ? '操作系统识别、' : '' }}\n            {{ props.row.policy.ip_config.ssl_cert === true ? 'SSL 证书获取、' : '' }}\n            {{ props.row.policy.npoc_service_detection === true ? '(py)服务识别' : '' }}\n          </span>\n          <br><br>\n          <h3>\n            站点和风险配置\n          </h3>\n          <span style=\"font-weight: bold;\">\n            配置信息：\n          </span>\n          <span>\n            {{ props.row.policy.site_config.site_identify === true ? '站点识别、' : '' }}\n            {{ props.row.policy.site_config.site_capture === true ? '站点截图、' : '' }}\n            {{ props.row.policy.site_config.site_spider === true ? '站点爬虫、' : '' }}\n            {{ props.row.policy.site_config.nuclei_scan === true ? 'nuclei 调用、' : '' }}\n            {{ props.row.policy.site_config.unauth_scan === true ? 'unauth 调用、' : '' }}\n            {{ props.row.policy.site_config.findvhost === true ? 'host碰撞 调用、' : '' }}\n            {{ props.row.policy.site_config.web_info_hunter === true ? 'wih 调用、' : '' }}\n            {{ props.row.policy.file_leak === true ? '文件泄露、' : '' }}\n            {{ props.row.policy.site_config.xray_scan === true ? 'xray调用' : '' }}\n          </span>\n          <br><br>\n          <h3>\n            POC配置\n          </h3>\n          <span style=\"font-weight: bold;\">\n            配置信息：\n          </span>\n          <span v-for=\"items in props.row.policy.poc_config\" :key=\"items\">\n            {{ items.vul_name + '、' }}\n          </span>\n          <br><br>\n          <h3>\n            弱口令爆破配置\n          </h3>\n          <span style=\"font-weight: bold;\">\n            配置信息：\n          </span>\n          <span v-for=\"items in props.row.policy.brute_config\" :key=\"items\">\n            {{ items.vul_name + '、' }}\n          </span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.name')\" min-width=\"120px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>\n            {{ row.name }}\n          </span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.desc')\" width=\"280px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.desc }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.groupid')\" width=\"280px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span class=\"link-type\" @click=\"searchgroup(row)\">{{ row.policy.scope_config.scope_id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.update_date')\" width=\"250px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.update_date }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column :label=\"$t('table.actions')\" align=\"center\" width=\"250\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row}\">\n          <el-button size=\"mini\" type=\"success\" @click=\"handtask(row)\">\n            {{ $t('table.run') }}\n          </el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"batchDelect1(row)\">\n            {{ $t('table.delete') }}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"listQuery.page\"\n      :limit.sync=\"listQuery.size\"\n      @pagination=\"getList\"\n    />\n\n    <el-dialog :title=\"ruletask[dialogStatus]\" :visible.sync=\"dialogVisible\">\n      <el-form\n        ref=\"dataForm\"\n        :rules=\"rules\"\n        :model=\"temps\"\n        label-position=\"left\"\n        label-width=\"70px\"\n        style=\"width: 400px; margin-left:50px;\"\n      >\n        <el-form-item :label=\"$t('table.type')\" required>\n          <el-select v-model=\"temp.task_tag\" size=\"small\">\n            <el-option v-for=\"item in taskOption\" :key=\"item.key\" :label=\"item.label\" :value=\"item.key\" />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('table.name')\" required>\n          <el-input\n            v-model=\"taskName\"\n          />\n        </el-form-item>\n        <el-form-item :label=\"$t('table.target')\" required>\n          <el-input v-model=\"temp.target\" :autosize=\"{ minRows: 2, maxRows: 4}\" type=\"textarea\" />\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addruleTask\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<style>\n.demo-table-expand {\n  font-size: 0;\n}\n.border-box {\n  border: 1px solid #ccc; /* light gray border */\n  background-color: #f5f5f5; /* light gray background */\n  padding: 10px;\n  margin-bottom: 5px;\n  display: block;\n}\n.demo-table-expand label {\n  width: 90px;\n  color: #99a9bf;\n}\n.demo-table-expand .el-form-item {\n  margin-right: 0;\n  margin-bottom: 0;\n  width: 50%;\n}\n\n::v-deep {\n  .row-expand-unhas .el-table__expand-column {\n    pointer-events: none;\n  }\n  .row-expand-unhas .el-table__expand-column .el-icon {\n    visibility: hidden;\n  }\n}\n</style>\n\n<script>\nimport {\n  fetchPv,\n  createArticle,\n  updateArticle,\n  startArticle,\n  stopArticle,\n  reStart,\n  Stop,\n  batchdeletemonitor,\n  batchstopmonitor,\n  batchrecovermonitor,\n  batchrecovermonitor1,\n  ruleList,\n  ruledelete,\n  createruletask\n} from '@/api/article'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination'\nimport row from 'element-ui/packages/row'\n\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        done: 'success',\n        error: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n\n  data() {\n    return {\n      taskOption: [{ label: '资产侦查任务', key: 'task' }, { label: '风险巡航任务', key: 'risk_cruising' }],\n      dialogVisible: false,\n      configdata: [],\n      tableKey: 0,\n      list: null,\n      sels: '', // 当前选框选中的值\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        size: 10,\n        order: '-update_date',\n        _id: ''\n      },\n      configOptions: [{ label: '升序', key: 'target' }, { label: '降序', key: '-target' }],\n      statusOptions: ['test', 'big'],\n      srcptOptions: ['test', 'top100', 'top1000', 'all'],\n      levelptOptions: ['test', 'top100', 'top1000', 'all'],\n      showReviewer: false,\n      temp: {\n        name: '',\n        target: '',\n        task_tag: '',\n        domain_brute_type: 'big',\n        port_scan_type: 'top100'\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      ruletask: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{ required: true, message: '类型不能为空', trigger: 'change' }],\n        domain: [{ required: true, message: '域名不能为空', trigger: 'change' }],\n        name: [{ required: true, message: '厂商不能为空', trigger: 'blur' }]\n      },\n      downloadLoading: false\n    }\n  },\n  computed: {\n    taskName() {\n      if (this.temp.task_tag === 'task') {\n        return '资产侦查任务-' + this.temp.name\n      } else if (this.temp.task_tag === 'risk_cruising') {\n        return '风险巡航任务-' + this.temp.name\n      } else {\n        return this.temp.name\n      }\n    },\n    row() {\n      return row\n    }\n  },\n  created() {\n    this.listQuery._id = this.$route.query._id\n    this.getList()\n  },\n  methods: {\n    searchgroup(row) {\n      this.$router.push({\n        path: '/group/group-info',\n        query: {\n          _id: row.policy.scope_config.scope_id,\n          scope_id: row.policy.scope_config.scope_id\n        }\n      })\n    },\n    getTaskName() {\n      return this.temp.task_tag === 'task'\n        ? '资产侦查任务-' + this.temp.name\n        : this.temp.task_tag === 'risk_cruising'\n          ? '风险巡航任务-' + this.temp.name\n          : this.temp.name\n    },\n    addruleTask() {\n      this.dialogVisible = false\n      const result = {\n        policy_id: this.temp.policy_id,\n        name: this.getTaskName(),\n        target: this.temp.target,\n        task_tag: this.temp.task_tag\n      }\n      createruletask(result).then(response => {\n        if (response.code === 200) {\n          this.dialogFormVisible = false\n          this.$notify({\n            title: '成功',\n            message: '创建成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.getList()\n        }\n      }).catch(error => {\n        // 处理请求异常\n        this.$notify({\n          title: '失败',\n          message: error.message,\n          type: 'error',\n          duration: 2000\n        })\n      })\n    },\n    handtask(row) {\n      // eslint-disable-next-line no-sequences\n      this.temp.task_tag = ''\n      this.temp.target = ''\n      this.temp.name = row.name\n      this.temp.policy_id = row._id\n      this.dialogStatus = 'create'\n      this.dialogVisible = true\n    },\n    toaddrule() {\n      this.$router.push('/rule/addrule-info')\n    },\n    headerCellStyle({ row, column, rowIndex, columnIndex }) {\n      return { textAlign: 'center', background: '#E6E6E6' }\n    },\n    // 设置表内容样式\n    cellStyle({ row, column, rowIndex, columnIndex }) {\n      return { textAlign: 'center' }\n    },\n    // 设置row样式\n    rowClassName({ row, rowIndex }) {\n      console.log(JSON.stringify(row))\n      const data = row\n      const res = []\n      if (data.datas && data.datas.length > 0) {\n        res.push('row-expand-has')\n        return res\n      } else {\n        res.push('row-expand-unhas')\n        return res\n      }\n    },\n    getList() {\n      this.listLoading = true\n      ruleList(this.listQuery).then(response => {\n        this.list = response.items\n        this.total = response.total\n        this.configdata = response.items\n        console.log(this.configdata)\n\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1 * 1000)\n      })\n    },\n    indexMethod(index) {\n      return index + 1\n    },\n    handleFilter() {\n      this.getList()\n    },\n    handleModifyStatus_stop(row, status) {\n      stopArticle(row)\n      this.$message({\n        message: '操作成功',\n        type: 'success'\n      })\n      row.status = status\n    },\n    handleModifyStatus_start(row, status) {\n      startArticle(row)\n      this.$message({\n        message: '操作成功',\n        type: 'success'\n      })\n      row.status = status\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    handleCreate() {\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const result = {\n            name: this.temp.name,\n            target: this.temp.domain\n          }\n          createArticle(result).then(() => {\n            this.list.unshift(this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '成功',\n              message: '创建成功',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              location.reload()\n            }, 1000)\n          })\n        }\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const tempData = Object.assign({}, this.temp)\n          updateArticle(tempData.uid, tempData).then(() => {\n            const index = this.list.findIndex(v => v.id === this.temp.id)\n            this.list.splice(index, 1, this.temp)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: '成功',\n              message: '更新成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    // 批量删除执行操作\n    batchDelect() {\n      // 删除前的提示\n      this.$confirm('确认删除记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        const data = {\n          job_id: this.sels.map((item) => item._id)\n        }\n        batchdeletemonitor(data)\n        this.$notify({\n          title: '成功',\n          message: '删除成功',\n          type: 'success',\n          duration: 2000\n        })\n        setTimeout(() => {\n          location.reload()\n        }, 1000)\n      })\n    },\n    batchRecover() {\n      // 删除前的提示\n      const data = {\n        job_id: this.sels.map((item) => item._id)\n      }\n      batchrecovermonitor(data)\n      this.$notify({\n        title: '成功',\n        message: '恢复成功',\n        type: 'success',\n        duration: 2000\n      })\n      setTimeout(() => {\n        location.reload()\n      }, 1000)\n    },\n    batchRecover1(row) {\n      const data = {\n        job_id: row._id\n      }\n      batchrecovermonitor1(data)\n      this.$notify({\n        title: '成功',\n        message: '恢复成功',\n        type: 'success',\n        duration: 2000\n      })\n      setTimeout(() => {\n        location.reload()\n      }, 1000)\n    },\n    batchStop() {\n      // 删除前的提示\n      const data = {\n        job_id: this.sels.map((item) => item._id)\n      }\n      batchstopmonitor(data)\n      this.$notify({\n        title: '成功',\n        message: '停止成功',\n        type: 'success',\n        duration: 2000\n      })\n      setTimeout(() => {\n        location.reload()\n      }, 1000)\n    },\n    batchStop1(row) {\n      const data = {\n        job_id: [row._id]\n      }\n      batchstopmonitor(data)\n      this.$notify({\n        title: '成功',\n        message: '停止成功',\n        type: 'success',\n        duration: 2000\n      })\n      setTimeout(() => {\n        location.reload()\n      }, 1000)\n    },\n    batchDelect1(row) {\n      // 删除前的提示\n      this.$confirm('确认删除记录吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        const data = {\n          policy_id: [row._id]\n        }\n        ruledelete(data).then(response => {\n          if (response.code === 200) {\n            this.$notify({\n              title: '成功',\n              message: '删除成功',\n              type: 'success',\n              duration: 2000\n            })\n            this.getList()\n          }\n        }).catch(error => {\n          // 处理请求异常\n          this.$notify({\n            title: '失败',\n            message: error.message,\n            type: 'error',\n            duration: 2000\n          })\n        })\n      })\n    },\n    reStarts(row) {\n      const data = {\n        task_id: [row._id]\n      }\n      reStart(data)\n      this.$notify({\n        title: '成功',\n        message: '运行成功',\n        type: 'success',\n        duration: 2000\n      })\n      setTimeout(() => {\n        location.reload()\n      }, 1000)\n    },\n\n    taskStop(row) {\n      Stop(row._id)\n      this.$notify({\n        title: '成功',\n        message: '运行成功',\n        type: 'success',\n        duration: 2000\n      })\n      setTimeout(() => {\n        location.reload()\n      }, 1000)\n    },\n\n    handleFetchPv(pv) {\n      fetchPv(pv).then(response => {\n        this.pvData = response.data.pvData\n        this.dialogPvVisible = true\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['任务', '目标', '状态', '开始时间', '结束时间']\n        const filterVal = ['name', 'target', 'status', 'start_time', 'end_time']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: '任务表'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const order = this.listQuery.order\n      return order === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}