{"remainingRequest":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\components\\ThemePicker\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\src\\components\\ThemePicker\\index.vue","mtime":1759135052000},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\babel.config.js","mtime":1759135052000},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1759192387221},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1759192384647},{"path":"C:\\Users\\PengYingJie\\Desktop\\ARL\\rontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1759192386775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["version","require","ORIGINAL_THEME","data","chalk","theme","computed","defaultTheme","$store","state","settings","watch","handler","val","oldVal","immediate","_this","_asyncToGenerator","_regenerator","m","_callee","themeCluster","originalCluster","$message","getHandler","url","chalkHandler","styles","w","_context","n","a","getThemeCluster","replace","console","log","message","customClass","type","duration","iconClass","variable","id","newStyle","updateStyle","styleTag","document","getElementById","createElement","setAttribute","head","appendChild","innerText","concat","getCSSString","slice","call","querySelectorAll","filter","style","text","RegExp","test","forEach","$emit","close","methods","oldCluster","newCluster","color","index","_this2","Promise","resolve","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","tintColor","tint","red","parseInt","green","blue","join","Math","round","toString","shadeColor","shade","clusters","i","push","Number","toFixed"],"sources":["src/components/ThemePicker/index.vue"],"sourcesContent":["<template>\n  <el-color-picker\n    v-model=\"theme\"\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\n    class=\"theme-picker\"\n    popper-class=\"theme-picker-dropdown\"\n  />\n</template>\n\n<script>\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\n\nexport default {\n  data() {\n    return {\n      chalk: '', // content of theme-chalk css\n      theme: ''\n    }\n  },\n  computed: {\n    defaultTheme() {\n      return this.$store.state.settings.theme\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function(val, oldVal) {\n        this.theme = val\n      },\n      immediate: true\n    },\n    async theme(val) {\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\n      if (typeof val !== 'string') return\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\n      console.log(themeCluster, originalCluster)\n\n      const $message = this.$message({\n        message: '  Compiling the theme',\n        customClass: 'theme-message',\n        type: 'success',\n        duration: 0,\n        iconClass: 'el-icon-loading'\n      })\n\n      const getHandler = (variable, id) => {\n        return () => {\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\n\n          let styleTag = document.getElementById(id)\n          if (!styleTag) {\n            styleTag = document.createElement('style')\n            styleTag.setAttribute('id', id)\n            document.head.appendChild(styleTag)\n          }\n          styleTag.innerText = newStyle\n        }\n      }\n\n      if (!this.chalk) {\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\n        await this.getCSSString(url, 'chalk')\n      }\n\n      const chalkHandler = getHandler('chalk', 'chalk-style')\n\n      chalkHandler()\n\n      const styles = [].slice.call(document.querySelectorAll('style'))\n        .filter(style => {\n          const text = style.innerText\n          return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n        })\n      styles.forEach(style => {\n        const { innerText } = style\n        if (typeof innerText !== 'string') return\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\n      })\n\n      this.$emit('change', val)\n\n      $message.close()\n    }\n  },\n\n  methods: {\n    updateStyle(style, oldCluster, newCluster) {\n      let newStyle = style\n      oldCluster.forEach((color, index) => {\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n      })\n      return newStyle\n    },\n\n    getCSSString(url, variable) {\n      return new Promise(resolve => {\n        const xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n            resolve()\n          }\n        }\n        xhr.open('GET', url)\n        xhr.send()\n      })\n    },\n\n    getThemeCluster(theme) {\n      const tintColor = (color, tint) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        if (tint === 0) { // when primary color is in its rgb space\n          return [red, green, blue].join(',')\n        } else {\n          red += Math.round(tint * (255 - red))\n          green += Math.round(tint * (255 - green))\n          blue += Math.round(tint * (255 - blue))\n\n          red = red.toString(16)\n          green = green.toString(16)\n          blue = blue.toString(16)\n\n          return `#${red}${green}${blue}`\n        }\n      }\n\n      const shadeColor = (color, shade) => {\n        let red = parseInt(color.slice(0, 2), 16)\n        let green = parseInt(color.slice(2, 4), 16)\n        let blue = parseInt(color.slice(4, 6), 16)\n\n        red = Math.round((1 - shade) * red)\n        green = Math.round((1 - shade) * green)\n        blue = Math.round((1 - shade) * blue)\n\n        red = red.toString(16)\n        green = green.toString(16)\n        blue = blue.toString(16)\n\n        return `#${red}${green}${blue}`\n      }\n\n      const clusters = [theme]\n      for (let i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n      }\n      clusters.push(shadeColor(theme, 0.1))\n      return clusters\n    }\n  }\n}\n</script>\n\n<style>\n.theme-message,\n.theme-picker-dropdown {\n  z-index: 99999 !important;\n}\n\n.theme-picker .el-color-picker__trigger {\n  height: 26px !important;\n  width: 26px !important;\n  padding: 2px;\n}\n\n.theme-picker-dropdown .el-color-dropdown__link-btn {\n  display: none;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}